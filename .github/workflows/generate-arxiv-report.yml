name: Generate ArXiv Paper Report

on:
  workflow_dispatch:
    inputs:
      arxiv_url:
        description: 'ArXiv paper URL (e.g., https://arxiv.org/abs/2410.20672)'
        required: true
        type: string
      language:
        description: 'Report language'
        required: false
        default: 'English'
        type: choice
        options:
          - 'English'
          - 'Traditional Chinese'
      mode:
        description: 'Report mode'
        required: false
        default: 'simple'
        type: choice
        options:
          - 'simple'
          - 'detailed'

jobs:
  generate-report:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libfontconfig1-dev \
          libfreetype6-dev \
          libx11-dev \
          libxext-dev \
          libxfixes-dev \
          libxi-dev \
          libxrender-dev \
          libxcb1-dev \
          libx11-xcb-dev \
          libxcb-glx0-dev \
          libxcb-render0-dev \
          libxcb-render-util0-dev \
          libxcb-shape0-dev \
          libxcb-randr0-dev \
          libxcb-image0-dev \
          libxcb-shm0-dev \
          libxcb-xfixes0-dev \
          wkhtmltopdf \
          fonts-noto-cjk
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
    
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: make install
    
    - name: Set up environment variables
      run: |
        echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> $GITHUB_ENV
        echo "OPENAI_BASE_URL=${{ secrets.OPENAI_BASE_URL }}" >> $GITHUB_ENV
    
    - name: Generate report
      id: generate
      run: |
        poetry run python scripts/generate_single_report.py "${{ inputs.arxiv_url }}" --language "${{ inputs.language }}" --mode "${{ inputs.mode }}"
    
    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
    
    - name: Commit and push report
      run: |
        git add papers/
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Add arXiv paper report: ${{ steps.generate.outputs.report_filename }}"
          git push
          echo "Report committed and pushed successfully"
        fi
    
    - name: Upload report as artifact
      uses: actions/upload-artifact@v3
      with:
        name: arxiv-report-${{ github.run_number }}
        path: papers/
        retention-days: 30
    
    - name: Summary
      run: |
        echo "## ðŸ“„ ArXiv Paper Report Generated!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Paper URL:** ${{ inputs.arxiv_url }}" >> $GITHUB_STEP_SUMMARY
        echo "**Language:** ${{ inputs.language }}" >> $GITHUB_STEP_SUMMARY
        echo "**Mode:** ${{ inputs.mode }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Generated Report:** \`${{ steps.generate.outputs.report_filename }}\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "The report has been committed to the repository and is also available as an artifact." >> $GITHUB_STEP_SUMMARY
